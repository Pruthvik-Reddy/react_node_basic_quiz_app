[{"E:\\8th_sem\\Internship\\WORK\\fe\\src\\App.js":"1","E:\\8th_sem\\Internship\\WORK\\fe\\src\\Components\\Login.js":"2","E:\\8th_sem\\Internship\\WORK\\fe\\src\\Components\\aptitude.js":"3","E:\\8th_sem\\Internship\\WORK\\fe\\src\\Components\\auth.js":"4","E:\\8th_sem\\Internship\\WORK\\fe\\src\\Components\\header.js":"5","E:\\8th_sem\\Internship\\WORK\\fe\\src\\Components\\technical.js":"6","E:\\8th_sem\\Internship\\WORK\\fe\\src\\Components\\GK.js":"7","E:\\8th_sem\\Internship\\WORK\\fe\\src\\Components\\create.js":"8","E:\\8th_sem\\Internship\\WORK\\fe\\src\\index.js":"9","E:\\8th_sem\\Internship\\WORK\\fe\\src\\Components\\category.js":"10","E:\\8th_sem\\Internship\\WORK\\fe\\src\\Components\\Register.js":"11","E:\\8th_sem\\Internship\\WORK\\fe\\src\\Components\\Home.js":"12"},{"size":1378,"mtime":1611816321195,"results":"13","hashOfConfig":"14"},{"size":5293,"mtime":1609139862997,"results":"15","hashOfConfig":"14"},{"size":7362,"mtime":1611942525302,"results":"16","hashOfConfig":"14"},{"size":1096,"mtime":1608559729703,"results":"17","hashOfConfig":"14"},{"size":287,"mtime":1610965711499,"results":"18","hashOfConfig":"14"},{"size":7291,"mtime":1611942267149,"results":"19","hashOfConfig":"14"},{"size":7395,"mtime":1611942401146,"results":"20","hashOfConfig":"14"},{"size":9343,"mtime":1608703751607,"results":"21","hashOfConfig":"14"},{"size":500,"mtime":499162500000,"results":"22","hashOfConfig":"14"},{"size":2085,"mtime":1611902415637,"results":"23","hashOfConfig":"14"},{"size":8901,"mtime":1611940786519,"results":"24","hashOfConfig":"14"},{"size":1111,"mtime":1611936170285,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"l9jka3",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\8th_sem\\Internship\\WORK\\fe\\src\\App.js",[],"E:\\8th_sem\\Internship\\WORK\\fe\\src\\Components\\Login.js",["57"],"import { Navbar, Nav } from 'react-bootstrap';\r\nimport \"./login.css\";\r\nimport Header from './header'\r\nimport React, { Component } from \"react\";\r\nimport { withRouter } from 'react-router-dom';\r\nconst axios = require('axios');\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeuserid = this.onChangeuserid.bind(this);\r\n        this.onChangepassword = this.onChangeuserpassword.bind(this);\r\n\r\n        this.state = {\r\n            userid: '',\r\n            userpassword: '',\r\n            formErrors: { userid: '', userpassword: '' },\r\n            redirect: false,\r\n            // useridValid: false,\r\n            // userpasswordValid: false,\r\n            // formValid: false\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        \r\n        this.setState({\r\n            username: this.props.username\r\n        })\r\n    }\r\n\r\n    handleUserInput = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        if (name === 'userid') {\r\n            this.setState({ userid: value })\r\n        } else {\r\n            this.setState({ userpassword: value })\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    onChangeuserid(e) {\r\n        this.setState({\r\n            userid: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeuserpassword(e) {\r\n        this.setState({\r\n            userpassword: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        if (this.state.userid && this.state.userpassword) {\r\n            axios.post('http://localhost:5000/users/login/', {\r\n                userid: this.state.userid,\r\n                userpassword: this.state.userpassword\r\n            }).then((response) => {\r\n                this.props.history.push('/auth', {userid: response.data.userid, userpassword: this.state.userpassword})\r\n                // if(response.data.code !== {error: \"User does not exists\"}){\r\n                //     console.log(\"logged in successfull\")\r\n                // }\r\n                console.log(`Form submitted:`);\r\n                console.log(`Userid: ${this.state.userid}`);\r\n                console.log(`userPassword: ${this.state.userpassword}`);\r\n\r\n            })\r\n        } else {\r\n            if (this.state.userid === '') {\r\n                this.setState(prevState => ({\r\n                    formErrors: {\r\n                        ...prevState.formErrors,\r\n                        userid: 'Please enter userid'\r\n                    }\r\n                }))\r\n            }\r\n            if (this.state.userpassword === '') {\r\n                this.setState(prevState => ({\r\n                    formErrors: {\r\n                        ...prevState.formErrors,\r\n                        userpassword: 'Please enter password'\r\n                    }\r\n                }))\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { formErrors } = this.state;\r\n        return (\r\n            <div className=\"container cd1\">\r\n                <Navbar bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand href=\"/\" style={{ fontWeight: \"bold\" }}>Quiz App</Navbar.Brand>\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"/register\" style={{ color: \"white\" }}>Register</Nav.Link>\r\n                    </Nav>\r\n                </Navbar>\r\n                <div className=\"container cd6 center\" style={{ position: \"absolute\", top: \"90px\", marginLeft: 600 }}>\r\n                    <h3 className=\"center\">Login</h3>\r\n\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\" style={{ width: \"200px\" }}>\r\n                            <label className=\"aa\">Userid: </label>\r\n                            <input type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"userid\"\r\n                                value={this.state.userid}\r\n\r\n                                onChange={this.handleUserInput}\r\n                            />\r\n                        </div>\r\n                        {formErrors && formErrors.userid && <p>{formErrors.userid}</p>}\r\n                        <div className=\"form-group\" style={{ width: \"200px\" }}>\r\n                            {/* <div className=\"form-group \" style={{width :\"200px\"}}> */}\r\n                            <label className=\"aa\">userPassword: </label>\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                className=\"form-control\"\r\n                                value={this.state.userpassword}\r\n                                onChange={this.handleUserInput}\r\n                            />\r\n                        </div>\r\n                        {formErrors && formErrors.userpassword && <p>{formErrors.userpassword}</p>}\r\n                    </form>\r\n                    <div>\r\n                        {/* <button onClick={()=>{this.setState({username:'', goBack:true})}}>Exit</button> */}\r\n                        <button className=\"btn btn-primary middle3\" onClick={this.handleSubmit}  >\r\n                            Login\r\n                                </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(Login);","E:\\8th_sem\\Internship\\WORK\\fe\\src\\Components\\aptitude.js",["58","59"],"E:\\8th_sem\\Internship\\WORK\\fe\\src\\Components\\auth.js",["60","61"],"\r\n\r\nimport React, { Component } from \"react\";\r\nimport {Redirect} from 'react-router-dom';\r\nconst axios = require('axios');\r\nvar Router = require('react-router');\r\n\r\n\r\nexport default class Auth extends Component {\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state={\r\n      loggedIn:false,\r\n      routes:null,\r\n    }\r\n  }\r\n  componentDidMount()\r\n  {\r\n    console.log('propss', this.props)\r\n    axios.post('http://localhost:5000/users/login/', {\r\n      userid: this.props.location.state.userid,\r\n    userpassword: this.props.location.state.userpassword\r\n    \r\n    })\r\n    .then( (response) =>{\r\n      console.log('responsee',response)\r\n      if(response.status===200){\r\n    if(response.data.usertype === 'admin') {\r\n      this.setState({loggedIn : true,routes:<Redirect to={\"/create\"} />});\r\n    } else {\r\n      {this.setState({loggedIn : true,routes:<Redirect to={\"/category\"} />});\r\n    }\r\n\r\n    }\r\n      }\r\n  else\r\n    this.setState({routes:<Redirect to={\"/login\"} />});\r\n    });\r\n  }\r\n  \r\n\r\n  \r\n  render(){\r\n    \r\n\r\nreturn(<div>\r\n  \r\n\r\n {this.state.routes}\r\n\r\n \r\n \r\n </div>);\r\n\r\n}\r\n}",["62","63"],"E:\\8th_sem\\Internship\\WORK\\fe\\src\\Components\\header.js",[],"E:\\8th_sem\\Internship\\WORK\\fe\\src\\Components\\technical.js",["64","65"],"import \"./technical.css\";\r\nimport React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport './exam.css';\r\n// import db from './db';\r\nimport {Navbar,Nav} from 'react-bootstrap';\r\n\r\nexport default class Technical extends Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        \r\n        data: [],\r\n        \r\n        //count: 0,\r\n        currentQuestionIndex : 0,\r\n        questions : [],\r\n        answers : {},\r\n\r\n        //correct_lis: [],\r\n        //wrong_lis: [],\r\n        name : [],\r\n        //count: 0,\r\n        dict : {},\r\n        pass : \"Pass\",\r\n        fail: \"Fail\",\r\n        \r\n       \r\n        correctAnswers:[],\r\n        number_of_correct:0,\r\n\r\n        number_of_wrong:0,\r\n        endQuiz: false,\r\n        // buttonClicked: false\r\n      };\r\n      // this.getDetails = this.getDetails.bind(this);\r\n    }\r\n\r\n   \r\n\r\n    componentDidMount() {\r\n      axios.get(\"http://localhost:5000/users/tech\").then(res => {\r\n        this.setState({\r\n          data: res.data ,\r\n           \r\n        });\r\n      });\r\n      console.log('Hello world');\r\n      axios.post(\"http://localhost:5000/users/login\").then((res) => {\r\n        \r\n         this.setState({\r\n         name: res.data.username\r\n          \r\n         });\r\n        \r\n        console.log(this.state.name);\r\n         \r\n       });\r\n      \r\n    }\r\n\r\n    handleNext(){\r\n      let incrementedQuestionIndex=this.state.currentQuestionIndex + 1;\r\n      this.setState({currentQuestionIndex:incrementedQuestionIndex});\r\n    }\r\n    button_func(value){\r\n      //console.log(value);\r\n      let currentQuestionIndex=this.state.currentQuestionIndex;\r\n      let answers=this.state.answers;\r\n      answers[currentQuestionIndex]=value;\r\n      //console.log(\"This is answers\");\r\n      //console.log(answers);\r\n      this.setState({answers});\r\n  \r\n  \r\n    }\r\n  \r\n    getResults(){\r\n      let correctAnswers=this.state.correctAnswers;\r\n      let answers=this.state.answers;\r\n      let number_of_correct=0;\r\n      let number_of_wrong=0;\r\n      for(var i=0;i<this.state.correctAnswers.length;i++){\r\n        if (answers[i]===correctAnswers[i]){\r\n          number_of_correct=number_of_correct+1;\r\n  \r\n        }\r\n        else{\r\n          number_of_wrong=number_of_wrong+1;\r\n        }\r\n      }\r\n      this.state.number_of_correct=number_of_correct;\r\n      this.state.number_of_wrong=number_of_wrong;\r\n    }\r\n        \r\n    \r\n    // handlecheck=(e, ans)=>{\r\n    //   console.log(ans)\r\n    //   //console.log(id);\r\n    //   //var wrongAnswers = this.state.wrongAnswers;\r\n    //   //var correctAnswers=this.state.correctAnswers;\r\n    //   var dict = this.state.dict;\r\n    //   //var id = this.state.id;\r\n    //   //console.log(id);\r\n    //   if(ans.correctanswer === e.currentTarget.value) {\r\n    //     //correctAnswers = correctAnswers + 1\r\n    //     dict[ans._id] = 1\r\n    //     this.setState({ dict })\r\n      \r\n    //   }else if(ans.correctanswer !== e.currentTarget.value) {\r\n    //     dict[ans._id] = -1\r\n    //     //wrongAnswers = wrongAnswers + 1\r\n    //     //correctAnswers = correctAnswers - 1\r\n    //     this.setState({ dict })\r\n  \r\n    //   }\r\n    // }\r\n  \r\n    // submitQuiz = () => {\r\n    //   //console.log\r\n    //   this.setState({endQuiz: true})\r\n    //   var wrongAnswers = this.state.wrongAnswers;\r\n    //   var correctAnswers=this.state.correctAnswers;\r\n    //   var dict = this.state.dict;\r\n    //   var name = this.state.name;\r\n  \r\n    //   for (var key in dict){\r\n    //     if (dict[key] === 1){\r\n    //       correctAnswers = correctAnswers + 1\r\n    //     }\r\n    //     else{\r\n    //       wrongAnswers = wrongAnswers + 1\r\n    //     }\r\n        \r\n    //   }\r\n    //   this.setState({ wrongAnswers, correctAnswers })\r\n    //   this.setState({name})\r\n  \r\n    //     //postive  += 1\r\n    // }\r\n  \r\n    render() {\r\n\r\n      \r\n      //const {correctAnswers} = this.state;\r\n      //const {wrongAnswers} = this.state;\r\n      if(typeof this.state.data!=='undefined' && this.state.data.length>0){\r\n      if(this.state.correctAnswers.length===0){\r\n          let correctAnswers=this.state.data.map((d)=>{\r\n            return d.correctanswer;\r\n          })\r\n          //console.log(\"Correct Answers\");\r\n          //console.log(correctAnswers);\r\n          this.setState({correctAnswers});\r\n      }\r\n      const currentQuestionIndex=this.state.currentQuestionIndex;\r\n      //console.log(this.state.data);\r\n      if(currentQuestionIndex>=this.state.data.length){\r\n        this.getResults();\r\n        let number_of_correct=this.state.number_of_correct;\r\n        let number_of_wrong=this.state.number_of_wrong;\r\n        //console.log(this.state.answers);\r\n        //console.log(this.state.correctAnswers);\r\n        //console.log(this.state.number_of_correct);\r\n        //console.log(this.state.number_of_wrong);\r\n        return(\r\n        <React.Fragment>\r\n         <div className=\"container cd1\">\r\n          <Navbar bg=\"dark\" variant=\"dark\">\r\n          <Navbar.Brand href=\"/\" style={{fontWeight:\"bold\"}}>Quiz App</Navbar.Brand>\r\n              <Nav className=\"mr-auto\">\r\n                  \r\n                  <Nav.Link href=\"\" style={{color:\"white\"}}>{this.state.name}</Nav.Link>\r\n               </Nav>      \r\n          </Navbar>\r\n  </div>\r\n        <div><h1>End of the Quiz</h1>\r\n        <div style={{position:\"absolute\",top:\"200px\",left:\"550px\"}}>\r\n                              <h3>Username: {this.state.name}    </h3>\r\n                              <h3>No.of CorrectAnswers : {number_of_correct}</h3>\r\n                              <h3>No.of WrongAnswers : {number_of_wrong}</h3>\r\n                              <h3>Total Score : {number_of_correct}</h3>\r\n                              <h3>Result: {Number(number_of_correct) >= Number(this.state.data.length)/2 ? this.state.pass : this.state.fail}</h3>\r\n                           </div></div>\r\n                           </React.Fragment>)\r\n      }\r\n      var question;\r\n      //var answers;\r\n      question=this.state.data[currentQuestionIndex].questiontext;\r\n      var answerlist=this.state.data[currentQuestionIndex].answerlist\r\n      //var answer_list_jsx=answerlist.map((d)=><label><input type='radio' value={d} name=\"foo\"  onChange={(evt)=>this.onChangeOption(evt.target.value)}/>{d}<br /> </label>)\r\n      var answer_list_jsx=answerlist.map((d)=>{\r\n      return (\r\n        <React.Fragment>\r\n      <button className=\"button button4\" key={d} onClick={()=>this.button_func(d)}>{d}</button>\r\n      <br></br>\r\n      <br></br>\r\n      </React.Fragment>\r\n      )\r\n    })\r\n      \r\n      return(<div>\r\n\r\n\r\n<div className=\"container cd1\">\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"/\" style={{fontWeight:\"bold\"}}>Quiz App</Navbar.Brand>\r\n            <Nav className=\"mr-auto\">\r\n                \r\n                <Nav.Link href=\"\" style={{color:\"white\"}}>{this.state.name}</Nav.Link>\r\n             </Nav>      \r\n         </Navbar>\r\n\r\n</div>\r\n        <center>\r\n        <h1> Question {currentQuestionIndex+1}</h1>\r\n        <h3>{question}</h3>\r\n        {answer_list_jsx}<br></br>\r\n        <button className=\"button button1\" onClick={()=>this.handleNext()}>Next</button>\r\n        </center>\r\n      </div>)\r\n\r\n\r\n      \r\n    }\r\n    else{\r\n      return (<div>Loading Questions</div>)\r\n    }\r\n\r\n\r\n\r\n\r\n             \r\n        \r\n        \r\n    \r\n    };\r\n  }\r\n","E:\\8th_sem\\Internship\\WORK\\fe\\src\\Components\\GK.js",["66","67"],"import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport './exam.css';\r\nimport {Navbar,Nav} from 'react-bootstrap';\r\n\r\nexport default class GK extends Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        data: [],\r\n        \r\n        //count: 0,\r\n        currentQuestionIndex : 0,\r\n        questions : [],\r\n        answers : {},\r\n\r\n        //correct_lis: [],\r\n        //wrong_lis: [],\r\n        name : [],\r\n        //count: 0,\r\n        dict : {},\r\n        pass : \"Pass\",\r\n        fail: \"Fail\",\r\n        \r\n       \r\n        correctAnswers:[],\r\n        number_of_correct:0,\r\n\r\n        number_of_wrong:0,\r\n        endQuiz: false,\r\n      };\r\n      // this.getDetails = this.getDetails.bind(this);\r\n    }\r\n  \r\n    componentDidMount() {\r\n      \r\n      axios.get(\"http://localhost:5000/users/gk\").then(res => {\r\n        //console.log(req.body);\r\n        this.setState({\r\n          data: res.data\r\n          \r\n        });\r\n        //console.log('Hello world');\r\n        //console.log(this.state.data);\r\n\r\n      });\r\n      console.log('Hello world');\r\n      axios.post(\"http://localhost:5000/users/login\").then((res) => {\r\n        \r\n         this.setState({\r\n         name: res.data.username\r\n          \r\n         });\r\n        \r\n        console.log(this.state.name);\r\n         \r\n       });\r\n    }\r\n    handleNext(){\r\n      let incrementedQuestionIndex=this.state.currentQuestionIndex + 1;\r\n      this.setState({currentQuestionIndex:incrementedQuestionIndex});\r\n    }\r\n    button_func(value){\r\n      //console.log(value);\r\n      let currentQuestionIndex=this.state.currentQuestionIndex;\r\n      let answers=this.state.answers;\r\n      answers[currentQuestionIndex]=value;\r\n      //console.log(\"This is answers\");\r\n      //console.log(answers);\r\n      this.setState({answers});\r\n  \r\n  \r\n    }\r\n  \r\n    getResults(){\r\n      let correctAnswers=this.state.correctAnswers;\r\n      let answers=this.state.answers;\r\n      let number_of_correct=0;\r\n      let number_of_wrong=0;\r\n      for(var i=0;i<this.state.correctAnswers.length;i++){\r\n        if (answers[i]===correctAnswers[i]){\r\n          number_of_correct=number_of_correct+1;\r\n  \r\n        }\r\n        else{\r\n          number_of_wrong=number_of_wrong+1;\r\n        }\r\n      }\r\n      this.state.number_of_correct=number_of_correct;\r\n      this.state.number_of_wrong=number_of_wrong;\r\n    }\r\n        \r\n\r\n    \r\n  // handlecheck=(e, ans)=>{\r\n  //   console.log(ans)\r\n  //   //console.log(id);\r\n  //   //var wrongAnswers = this.state.wrongAnswers;\r\n  //   //var correctAnswers=this.state.correctAnswers;\r\n  //   var dict = this.state.dict;\r\n  //   //var id = this.state.id;\r\n  //   //console.log(id);\r\n  //   if(ans.correctanswer === e.currentTarget.value) {\r\n  //     //correctAnswers = correctAnswers + 1\r\n  //     dict[ans._id] = 1\r\n  //     this.setState({ dict })\r\n    \r\n  //   }else if(ans.correctanswer !== e.currentTarget.value) {\r\n  //     dict[ans._id] = -1\r\n  //     //wrongAnswers = wrongAnswers + 1\r\n  //     //correctAnswers = correctAnswers - 1\r\n  //     this.setState({ dict })\r\n\r\n  //   }\r\n  // }\r\n\r\n  // submitQuiz = () => {\r\n  //   //console.log\r\n  //   this.setState({endQuiz: true})\r\n  //   var wrongAnswers = this.state.wrongAnswers;\r\n  //   var correctAnswers=this.state.correctAnswers;\r\n  //   var dict = this.state.dict;\r\n  //   var name = this.state.name;\r\n\r\n  //   for (var key in dict){\r\n  //     if (dict[key] === 1){\r\n  //       correctAnswers = correctAnswers + 1\r\n  //     }\r\n  //     else{\r\n  //       wrongAnswers = wrongAnswers + 1\r\n  //     }\r\n      \r\n  //   }\r\n  //   this.setState({ wrongAnswers, correctAnswers })\r\n  //   this.setState({name})\r\n\r\n  //     //postive  += 1\r\n  // }\r\n\r\n    render() {\r\n      //const {correctAnswers} = this.state;\r\n      //const {wrongAnswers} = this.state;\r\n      if(typeof this.state.data!=='undefined' && this.state.data.length>0){\r\n        if(this.state.correctAnswers.length===0){\r\n            let correctAnswers=this.state.data.map((d)=>{\r\n              return d.correctanswer;\r\n            })\r\n            //console.log(\"Correct Answers\");\r\n            //console.log(correctAnswers);\r\n            this.setState({correctAnswers});\r\n        }\r\n        const currentQuestionIndex=this.state.currentQuestionIndex;\r\n        //console.log(this.state.data);\r\n        if(currentQuestionIndex>=this.state.data.length){\r\n          this.getResults();\r\n          let number_of_correct=this.state.number_of_correct;\r\n          let number_of_wrong=this.state.number_of_wrong;\r\n          //console.log(this.state.answers);\r\n          //console.log(this.state.correctAnswers);\r\n          //console.log(this.state.number_of_correct);\r\n          //console.log(this.state.number_of_wrong);\r\n          return(\r\n          <React.Fragment>\r\n           <div className=\"container cd1\">\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand href=\"/\" style={{fontWeight:\"bold\"}}>Quiz App</Navbar.Brand>\r\n                <Nav className=\"mr-auto\">\r\n                    \r\n                    <Nav.Link href=\"\" style={{color:\"white\"}}>{this.state.name}</Nav.Link>\r\n                 </Nav>      \r\n            </Navbar>\r\n    </div>\r\n          <div><h1>End of the Quiz</h1>\r\n          <div style={{position:\"absolute\",top:\"200px\",left:\"550px\"}}>\r\n                                <h3>Username: {this.state.name}    </h3>\r\n                                <h3>No.of CorrectAnswers : {number_of_correct}</h3>\r\n                                <h3>No.of WrongAnswers : {number_of_wrong}</h3>\r\n                                <h3>Total Score : {number_of_correct}</h3>\r\n                                <h3>Result: {Number(number_of_correct) >= Number(this.state.data.length)/2 ? this.state.pass : this.state.fail}</h3>\r\n                             </div></div>\r\n                             </React.Fragment>)\r\n        }\r\n        var question;\r\n        //var answers;\r\n        question=this.state.data[currentQuestionIndex].questiontext;\r\n        var answerlist=this.state.data[currentQuestionIndex].answerlist\r\n        //var answer_list_jsx=answerlist.map((d)=><label><input type='radio' value={d} name=\"foo\"  onChange={(evt)=>this.onChangeOption(evt.target.value)}/>{d}<br /> </label>)\r\n        var answer_list_jsx=answerlist.map((d)=>{\r\n          return (\r\n            <React.Fragment>\r\n          <button className=\"button button4\" key={d} onClick={()=>this.button_func(d)}>{d}</button>\r\n          <br></br>\r\n          <br></br>\r\n          </React.Fragment>\r\n          )\r\n        })\r\n        \r\n        return(<div>\r\n  \r\n  \r\n  <div className=\"container cd1\">\r\n          <Navbar bg=\"dark\" variant=\"dark\">\r\n          <Navbar.Brand href=\"/\" style={{fontWeight:\"bold\"}}>Quiz App</Navbar.Brand>\r\n              <Nav className=\"mr-auto\">\r\n                  \r\n                  <Nav.Link href=\"\" style={{color:\"white\"}}>{this.state.name}</Nav.Link>\r\n               </Nav>      \r\n           </Navbar>\r\n  \r\n  </div>\r\n  \r\n        <center>\r\n        <h1> Question {currentQuestionIndex+1}</h1>\r\n        <h3>{question}</h3>\r\n        {answer_list_jsx}<br></br>\r\n        <button className=\"button button1\" onClick={()=>this.handleNext()}>Next</button>\r\n        </center>\r\n          \r\n        </div>)\r\n  \r\n  \r\n        \r\n      }\r\n      else{\r\n        return (<div>Loading Questions</div>)\r\n      }\r\n  \r\n  \r\n  \r\n  \r\n               \r\n          \r\n          \r\n      \r\n      };\r\n    }\r\n","E:\\8th_sem\\Internship\\WORK\\fe\\src\\Components\\create.js",["68"],"import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport {Navbar} from 'react-bootstrap';\r\nimport \"./Create.css\";\r\nexport default class Create extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangequestiontext = this.onChangequestiontext.bind(this);\r\n        this.onChangequestioncategory = this.onChangequestioncategory.bind(this);\r\n        this.onChangeanswertype = this.onChangeanswertype.bind(this);\r\n        this.onChangeanswerlist = this.onChangeanswerlist.bind(this);\r\n        \r\n        // this.onChangeoption1 = this.onChangeoption1.bind(this);\r\n        // this.onChangeoption2 = this.onChangeoption2.bind(this);\r\n        // this.onChangeoption3 = this.onChangeoption3.bind(this);\r\n        // this.onChangeoption4 = this.onChangeoption4.bind(this);\r\n        this.onChangecorrectanswer = this.onChangecorrectanswer.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        \r\n        this.state = {\r\n           \r\n            value:'',\r\n            questiontext: '',\r\n            questioncategory:'',\r\n            answertype:'',\r\n            answerlist:'',\r\n            correctanswer:'',\r\n            showMessage: false\r\n            // option1:'',\r\n            // option2:'',\r\n            // option3:'',\r\n            // option4:'',          \r\n\r\n            \r\n        }\r\n    };\r\n\r\n    error= () =>{\r\n        if(this.state.questiontext !== '' \r\n        && this.state.questioncategory !== '' \r\n        && this.state.answertype !=='' \r\n        && this.state.answerlist !== '' \r\n        && this.state.correctanswer !== '') {\r\n            this.setState({showMessage:true});\r\n        }  else {\r\n             alert(\"All fields are required\")\r\n        }\r\n       };  \r\n\r\n    onChangequestiontext(e) {\r\n        this.setState({\r\n            questiontext: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangequestioncategory(e) {\r\n        this.setState({\r\n            questioncategory: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeanswertype(e) {\r\n        this.setState({\r\n            answertype: e.target.value\r\n        });\r\n    }\r\n    onChangeanswerlist(e) {\r\n        this.setState({\r\n            answerlist: e.target.value.split(',')\r\n        });\r\n    }\r\n\r\n    \r\n   \r\n    // onChangeoption1(e) {\r\n    //     this.setState({\r\n    //         option1: e.target.value\r\n    //     });\r\n    // }\r\n    // onChangeoption2(e) {\r\n    //     this.setState({\r\n    //         option2: e.target.value\r\n    //     });\r\n    // }\r\n    // onChangeoption3(e) {\r\n    //     this.setState({\r\n    //         option3: e.target.value\r\n    //     });\r\n    // }\r\n    // onChangeoption4(e) {\r\n    //     this.setState({\r\n    //         option4: e.target.value\r\n    //     });\r\n    // }\r\n\r\n    onChangecorrectanswer(e) {\r\n        this.setState({\r\n            correctanswer: e.target.value\r\n        });\r\n    }\r\n    \r\n    \r\n\r\n  \r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        \r\n        console.log(`Form submitted:`);\r\n        console.log(`Question Text: ${this.state.questiontext}`);\r\n        console.log(`Question Category: ${this.state.questioncategory}`);\r\n        console.log(`Answer Type: ${this.state.answertype}`);\r\n        console.log(`Answer list: ${this.state.answerlist}`);\r\n        \r\n        console.log(`CorrectAnswer : ${this.state.correctanswer}`);\r\n    \r\n        \r\n\r\n        const newQuestion = {\r\n            \r\n            questiontext: this.state.questiontext,\r\n            questioncategory: this.state.questioncategory,\r\n            answertype: this.state.answertype,\r\n            answerlist:this.state.answerlist,\r\n            \r\n            correctanswer: this.state.correctanswer  \r\n            \r\n        };\r\n\r\n       \r\n\r\n\r\n        axios.post('http://localhost:5000/users/ques', newQuestion)\r\n            .then(res => console.log(res.data));\r\n        \r\n        \r\n       \r\n        \r\n        this.setState({\r\n            questiontext: '',\r\n            questioncategory:'',\r\n            answertype: '',\r\n            answerlist:'',\r\n            correctanswer: '',\r\n                  \r\n\r\n            \r\n        })\r\n    }\r\n\r\n    dropdown = (e) =>{\r\n        console.log(e.target.value)\r\n       this.setState({\r\n           value: e.target.value\r\n       });   \r\n    }   \r\n    render() {\r\n        return (\r\n            <div className=\"container cd3\">\r\n                <Navbar bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand href=\"/\" style={{fontWeight:\"bold\"}}>Quiz App</Navbar.Brand> \r\n                    \r\n                    {/* <Navbar.Brand href=\"/category\" style={{fontWeight:\"bold\"}}>category</Navbar.Brand>    */}\r\n                </Navbar>\r\n            <div className=\"cd4\">\r\n                <h3 className=\"color\">Create New Question</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                <div  style={{width :\"500px\"}} className=\"form-group\">\r\n                        <label className=\"color\">Question Text: </label>\r\n                        <input  type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={this.state.questiontext}\r\n                                onChange={this.onChangequestiontext}\r\n                                required\r\n                                />\r\n                    </div>\r\n                    <div  style={{width :\"500px\"}} className=\"form-group\">\r\n                        <label className=\"color\">Question Category: </label>\r\n                        <select id=\"questioncategory\"   \r\n                        className=\"form-control\"\r\n                          value={this.state.questioncategory} \r\n                          onChange={this.onChangequestioncategory} \r\n                          required\r\n\r\n                      >\r\n                             <option value=\"\">select.....</option>\r\n                            <option value=\"Technical\" >Technical</option>\r\n                            <option value=\"GK\">GK</option>\r\n                            <option value=\"Aptitude\">Aptitude</option>\r\n                           \r\n                      </select>\r\n                                \r\n                                \r\n                    </div>\r\n                    <div  style={{width :\"500px\"}} className=\"form-group\">\r\n                        <label className=\"color\">Answer Type: </label>\r\n                        <select   onClick={this.dropdown} \r\n                        className=\"form-control\"\r\n                        value={this.state.answertype} \r\n                        onChange={this.onChangeanswertype} \r\n                        required\r\n                        \r\n                        >\r\n                            <option value=\"\">select.....</option>\r\n                            <option value=\"text\">Textbox</option>\r\n                            <option value=\"radio\">RadioButton</option>\r\n                            {/* <option value=\"check\">Checkbox</option>\r\n                            <option value=\"image\">image</option>\r\n                            <option value=\"video\">video</option> */}\r\n                        </select>\r\n                 \r\n                    </div>\r\n                    <div  style={{width :\"500px\"}} className=\"form-group\">\r\n                        <label className=\"color\">Answer List: </label>\r\n                        {/* {this.state.value==='text'?<div>\r\n                            <input\r\n                             type=\"text\"\r\n                             className=\"form-control\"\r\n                             id=\"t\"\r\n                             value={this.state.answerlist} \r\n                             onChange={this.onChangeanswerlist} \r\n                             />\r\n                        </div>:null} */}\r\n\r\n                        {this.state.value==='radio'?<div>\r\n                        <input type=\"text\"\r\n                         className=\"form-control\"\r\n                         placeholder=\"option1,option2,option3,option4\"\r\n                         value={this.state.answerlist} \r\n                         onChange={this.onChangeanswerlist}\r\n                         required \r\n                        /><br/>\r\n                       \r\n                                </div>:null}\r\n                       \r\n                                            \r\n                                    </div>\r\n                  \r\n                    <div  style={{width :\"500px\"}} className=\"form-group\">\r\n                        <label className=\"color\">CorrectAnswer: </label>\r\n                        <input\r\n                                type=\"text\" \r\n                                className=\"form-control\"\r\n                                value={this.state.correctanswer}\r\n                                onChange={this.onChangecorrectanswer}\r\n                                required\r\n                                />\r\n                    </div>\r\n                     \r\n                    <div   className=\"color\" className=\"form-group\">{\r\n                           this.state.showMessage && <p> Question Created   </p>\r\n                    }\r\n                        <button type=\"submit\" value=\"Save \" className=\"btn btn-primary middle1\" onClick={() => this.error()}>Create\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n \r\n \r\n ",["69","70"],"E:\\8th_sem\\Internship\\WORK\\fe\\src\\index.js",[],"E:\\8th_sem\\Internship\\WORK\\fe\\src\\Components\\category.js",[],"E:\\8th_sem\\Internship\\WORK\\fe\\src\\Components\\Register.js",[],"E:\\8th_sem\\Internship\\WORK\\fe\\src\\Components\\Home.js",[],{"ruleId":"71","severity":1,"message":"72","line":3,"column":8,"nodeType":"73","messageId":"74","endLine":3,"endColumn":14},{"ruleId":"75","severity":1,"message":"76","line":85,"column":7,"nodeType":"77","endLine":85,"endColumn":17},{"ruleId":"75","severity":1,"message":"76","line":86,"column":7,"nodeType":"77","endLine":86,"endColumn":17},{"ruleId":"71","severity":1,"message":"78","line":6,"column":5,"nodeType":"73","messageId":"74","endLine":6,"endColumn":11},{"ruleId":"79","severity":1,"message":"80","line":32,"column":7,"nodeType":"81","messageId":"82","endLine":33,"endColumn":6},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"75","severity":1,"message":"76","line":92,"column":7,"nodeType":"77","endLine":92,"endColumn":17},{"ruleId":"75","severity":1,"message":"76","line":93,"column":7,"nodeType":"77","endLine":93,"endColumn":17},{"ruleId":"75","severity":1,"message":"76","line":89,"column":7,"nodeType":"77","endLine":89,"endColumn":17},{"ruleId":"75","severity":1,"message":"76","line":90,"column":7,"nodeType":"77","endLine":90,"endColumn":17},{"ruleId":"87","severity":1,"message":"88","line":251,"column":46,"nodeType":"89","endLine":251,"endColumn":68},{"ruleId":"83","replacedBy":"90"},{"ruleId":"85","replacedBy":"91"},"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'Router' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-native-reassign",["92"],"no-negated-in-lhs",["93"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["92"],["93"],"no-global-assign","no-unsafe-negation"]